{
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "bash .claude/scripts/check-code-workflow.sh \"${TOOL_INPUT}\" || exit 1"
          },
          {
            "type": "command",
            "command": "bash .claude/scripts/check-file-pattern.sh \"${TOOL_INPUT}\" || { echo '‚ùå BLOCKED: Cannot create file versions (-v2.js, -simple.js). Modify existing files instead.'; exit 1; }"
          }
        ]
      },
      {
        "matcher": "Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "bash .claude/scripts/check-code-workflow.sh \"${TOOL_INPUT}\" || exit 1"
          },
          {
            "type": "command",
            "command": "bash .claude/scripts/verify-imports.sh \"${TOOL_INPUT}\" || { echo '‚ö†Ô∏è  WARNING: Check that all imports exist before proceeding'; }"
          },
          {
            "type": "command",
            "command": "echo 'üìã REMINDER: Comment out old code with explanation when refactoring'"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "bash .claude/scripts/check-git-commit.sh \"${TOOL_INPUT}\" || { echo 'üö´ BLOCKED: Git commits require explicit user permission. Ask \"Should I commit these changes?\"'; exit 1; }"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "bash .claude/scripts/verify-implementation.sh \"${TOOL_INPUT}\" || echo '‚ö†Ô∏è  WARNING: Found incomplete function implementations'"
          },
          {
            "type": "command",
            "command": "bash .claude/scripts/check-module-size.sh \"${TOOL_INPUT}\" || echo '‚ö†Ô∏è  WARNING: Module exceeds 200 lines - consider splitting'"
          },
          {
            "type": "command",
            "command": "bash .claude/scripts/check-theme-consistency.sh \"${TOOL_INPUT}\" || echo '‚ö†Ô∏è  WARNING: Check theme consistency (dark glassmorphic)'"
          },
          {
            "type": "command",
            "command": "bash .claude/scripts/check-chrome-safety.sh \"${TOOL_INPUT}\" || echo '‚ö†Ô∏è  WARNING: Chrome API calls need context validation'"
          },
          {
            "type": "command",
            "command": "echo '‚úÖ Remember to test changes on multiple websites before committing'"
          }
        ]
      },
      {
        "matcher": "Read",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üìñ Reading file - Remember to understand existing code before making changes'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üèÅ Session Complete - Checklist:'; echo '  ‚úì All functions have implementations?'; echo '  ‚úì Imports verified?'; echo '  ‚úì Error handling added?'; echo '  ‚úì Theme consistency maintained?'; echo '  ‚úì Tested with user?'; echo '  ‚úì No uncommitted changes without permission?'"
          }
        ]
      }
    ]
  }
}